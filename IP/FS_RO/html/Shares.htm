<!DOCTYPE html>
<html>
  <head>
    <title>AJAX/RGraph share example (SSE/AJAX example)</title>
    <script src="RGraphCC.js"></script>
    <script src="RGraphLi.js"></script>
    <script src="RGraphCE.js"></script>
    <script src="jquery.js"></script>
    <script src="events.js"></script>
    <link href="Styles.css" rel="stylesheet">    
    <script>
      //
      // Global variable.
      //
      var _URL;
      var _CompanyNames = new Array ( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
                                      'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'
                                    );
      //
      // Helper function.
      //
      function _GetMaxOfArray(Array) {
        var Max;
        var i;

        Max = 0;
        for (i = 0; i < Array.length; i++) {
          if (Array[i] > Max) {
              Max = Array[i];
          }
        }
        return Max;
      }
      //
      // This is the AJAX callback. This function creates the chart, after the AJAX function
      // receives the data.
      //
      function _Callback(data) {
        var Max;
        Max = _GetMaxOfArray(data);
        Max = (Max + 20) -  (Max % 10);
        //
        // Start by resetting the canvas.
        //
        RGraph.reset(document.getElementById('cvs'));
        //
        // Create the chart
        //
        var myChart = new RGraph.Line('cvs', data)
          .set('ymax', Max )
          .set('numxticks', data.length)
          .set('numyticks', Max)
          .set('background.grid.autofit.numvlines', data.length)
          .set('labels', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30',  ])
          .set('colors', ['red'])
          .draw();
//          document.getElementById("Debug").innerHTML = "CSV: " + data + "<br>";
      }
      //
      // Draw the graph with the stock prices of the selected company.
      //
      function DrawGraph() {
        var i;
        if (_URL.length !== 21) {
          i = _URL.charAt(21) + _URL.charAt(22);
        } else {
          i = _URL.charAt(21);
        }
        document.getElementById("CompanyName").innerHTML = "<h2>Company " + _CompanyNames[i] + "</h2>";
        RGraph.AJAX.getCSV(_URL, _Callback);
      }
      //
      // Get the details of the selected company.
      //
      function GetDetails(CompanyID) {
        _URL = "/GetData.cgi?Company=" + CompanyID;
        DrawGraph();
      }
      //
      // Draw share table
      //
      if(typeof(EventSource) !== "undefined") {
        var source = new EventSource("GetShareTable.cgi");
        source.onmessage = function(event) {
          if (_URL == undefined) {
            _URL = "/GetData.cgi?Company=0";
          }
          DrawGraph();
          document.getElementById("Shares").innerHTML = event.data + "<br>";
        };
      } else {
        document.getElementById("Shares").innerHTML = "Sorry, your browser does not support server-sent events...";
      }
    </script>
  </head>
  <body>
    <header>SSE/AJAX/RGraph share example</header>
    <div id="Content" class="content">
      <span id="CompanyName"></span>
      <canvas id="cvs" width="700" height="300">[No canvas support]</canvas>
      <span id="Debug"></span>
      <div id="Shares" class="shares"></div>
      <div class="Description">
        <b>Description</b><br><br>
        <p>
          The Stock Quotes example demonstrates the usage of Server-Sent Events (SSE) and AJAX with emWeb.
        </p>
        <p>
          The stock quotes table is random data generated by the server and updated every second via SSE. The graph is updated via AJAX.
          Every update of the stock prices table triggers the graph library to request the last 30 stock prices of the selected company to redraw the graph.
          All stock quotes are fictional.
        </p>
        <p>
          The goal of this example is to demonstrate how simple it is to visualize any kind of data with the emNet Web server.
          State-of-the-art techniques like AJAX and SSE can be used without any problem. The only limit is your creativity.
        </p>
      </div>
    </div>
    <img src="Logo.gif" alt="Segger company logo" class="logo">  
    <footer>
       <p><a href="index.htm">Back to main</a></p>
       <p>SEGGER Microcontroller GmbH || <a href="http://www.segger.com">www.segger.com</a> <span class="hint">(external link)</span> </p>
    </footer>
  </body>
</html>